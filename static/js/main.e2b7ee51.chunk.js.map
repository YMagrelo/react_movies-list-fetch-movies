{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api/api.ts","index.tsx","App.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","query","setQuery","setMovie","isError","setError","cn","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","onClick","searchValue","fetch","then","response","json","findMovie","Title","Plot","Poster","Response","ReactDOM","render","data","setMovies","find","film","document","getElementById"],"mappings":"6wEAKaA,G,kBAA6B,SAAC,GAAD,IACxCC,EADwC,EACxCA,MADwC,IAExCC,mBAFwC,MAE1B,GAF0B,EAGxCC,EAHwC,EAGxCA,OACAC,EAJwC,EAIxCA,QAJwC,OAMxC,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC7BKK,EAA8B,SAAC,GAAD,QACzCC,cADyC,MAChC,GADgC,SAGzC,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,wBCD3BG,EAAuB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAC1BC,mBAAS,IADiB,mBAC7CC,EAD6C,KACtCC,EADsC,OAE1BF,mBAAuB,MAFG,mBAE7CL,EAF6C,KAEtCQ,EAFsC,OAGxBH,oBAAS,GAHe,mBAG7CI,EAH6C,KAGpCC,EAHoC,KAqD9CC,EAAKlB,IAAUgB,EAAU,kBAAoB,SAEnD,OACE,oCACE,0BAAMhB,UAAU,aAAamB,SA7CZ,SAACC,GACpBA,EAAMC,iBAEDd,IAILO,EAAS,IACTH,EAASJ,GACTQ,EAAS,SAqCL,yBAAKf,UAAU,SACb,2BAAOA,UAAU,QAAQsB,QAAQ,eAAjC,eAIA,yBAAKtB,UAAU,WACb,2BACEuB,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZzB,UAAWkB,EACXQ,MAAOb,EACPc,SAjES,SAACP,GAA0C,IACtDM,EAAUN,EAAMQ,OAAhBF,MAERZ,EAASY,GACTT,GAAS,OAiEH,uBAAGjB,UAAU,kBACVgB,EAAU,uCAA0C,KAIzD,yBAAKhB,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEuB,KAAK,SACLvB,UAAU,kBACV6B,QA5DY,WCjCF,IAACC,KDkCZjB,ECjCJkB,MAHU,8CAGSD,GACvBE,MAAK,SAAAC,GACJ,OAAOA,EAASC,WDgCfF,MAAK,SAAAG,GAAc,IAETvC,EAKLuC,EALFC,MACMvC,EAIJsC,EAJFE,KACQvC,EAGNqC,EAHFG,OACA7B,EAEE0B,EAFF1B,OAIe,SAFb0B,EADFI,SAaAxB,EARiB,CACfnB,QACAC,cACAC,SACAW,SACAV,QCvDY,8BDiDaU,KAW3BM,EAAS,MACTE,GAAS,SAiCP,iBASF,yBAAKjB,UAAU,WACb,4BACEuB,KAAK,SACLvB,UAAU,qBAFZ,sBAUN,yBAAKA,UAAU,aACb,wBAAIA,UAAU,SAAd,WACCO,EAAQ,kBAAC,EAAcA,GAAY,M,OE/G5CiC,IAASC,OAAO,mBCCO,WAAO,IAAD,EACC7B,mBAAkB8B,GADnB,mBACpBrC,EADoB,KACZsC,EADY,KAc3B,OACE,yBAAK3C,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWW,SAjBA,SAACJ,GACKF,EAAOuC,MAAK,SAAAC,GAAI,OAAIA,EAAKpC,SAAWF,EAAME,WAG7DkC,EAAU,GAAD,mBACJtC,GADI,CAEPE,YDVQ,MAASuC,SAASC,eAAe,W","file":"static/js/main.e2b7ee51.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map((movie) => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, {\n  FC, useState, ChangeEvent, FormEvent,\n} from 'react';\nimport './FindMovie.scss';\nimport className from 'classnames';\nimport { IMDB_URL, getMovie } from '../../api/api';\n\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  addMovie(movie: Movie): void;\n}\n\nexport const FindMovie: FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isError, setError] = useState(false);\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setQuery(value);\n    setError(false);\n  };\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!movie) {\n      return;\n    }\n\n    setQuery('');\n    addMovie(movie);\n    setMovie(null);\n  };\n\n  const handleFindMovie = () => {\n    getMovie(query)\n      .then(findMovie => {\n        const {\n          Title: title,\n          Plot: description,\n          Poster: imgUrl,\n          imdbId,\n          Response,\n        } = findMovie;\n\n        if (Response === 'True') {\n          const imdbUrl = IMDB_URL + imdbId;\n          const newMovie = {\n            title,\n            description,\n            imgUrl,\n            imdbId,\n            imdbUrl,\n          };\n\n          setMovie(newMovie);\n        } else {\n          setMovie(null);\n          setError(true);\n        }\n      });\n  };\n\n  const cn = className(isError ? 'input is-danger' : 'input');\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn}\n              value={query}\n              onChange={handleChange}\n            />\n          </div>\n\n          <p className=\"help is-danger\">\n            {isError ? 'Can\\'t find a movie with such a title' : ''}\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n              onClick={handleFindMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie ? <MovieCard {...movie} /> : ''}\n      </div>\n    </>\n  );\n};\n","export const IMDB_URL = 'https://www.imdb.com/title/';\n\nconst MOVIES_URL = 'https://www.omdbapi.com/?apikey=c4ea428d&t=';\n\nexport const getMovie = (searchValue: string): Promise<MovieFromServer> => {\n  return fetch(MOVIES_URL + searchValue)\n    .then(response => {\n      return response.json();\n    });\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React, { FC, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App: FC = () => {\n  const [movies, setMovies] = useState<Movie[]>(data);\n\n  const addMovie = (movie: Movie) => {\n    const newMovieFind = movies.find(film => film.imdbId === movie.imdbId);\n\n    if (!(newMovieFind)) {\n      setMovies([\n        ...movies,\n        movie,\n      ]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}